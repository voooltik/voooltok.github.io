window.addEventListener('load', () => {
  const selectedActivities = new Set();

  const activityElements = document.querySelectorAll('.activity-circle');
  activityElements.forEach(el => {
    el.addEventListener('click', () => {
      const type = el.dataset.activity;
      if (selectedActivities.has(type)) {
        selectedActivities.delete(type);
        el.classList.remove('selected');
      } else {
        selectedActivities.add(type);
        el.classList.add('selected');
      }
    });
  });

  const navButtons = {
    route: document.getElementById('nav-route'),
    promos: document.getElementById('nav-promos'),
    tinder: document.getElementById('nav-tinder')
  };

  const sections = {
    main: document.getElementById('main-section'),
    route: document.getElementById('route-display'),
    promos: document.getElementById('promos'),
    tinder: document.getElementById('tinder-section'),
    placeInfo: document.getElementById('place-info')
  };

  Object.entries(navButtons).forEach(([key, btn]) => {
    btn.addEventListener('click', () => {
      Object.values(sections).forEach(s => s.style.display = 'none');
      Object.values(navButtons).forEach(b => b.classList.remove('active'));

      btn.classList.add('active');
      sections[key].style.display = 'block';
    });
  });

  const places = [
    {
      name: "–ù–∞–±–µ—Ä–µ–∂–Ω–∞—è –í–æ–ª–≥–∏",
      description: "–ú–µ—Å—Ç–æ –¥–ª—è –Ω–µ—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≥—É–ª–æ–∫ —É —Ä–µ–∫–∏.",
      coordinates: [57.6241, 39.8846],
      type: "walk",
      age: "all",
      image: "https://upload.wikimedia.org/wikipedia/commons/2/23/Yaroslavl_riverfront.jpg"
    },
    {
      name: "–†–µ—Å—Ç–æ—Ä–∞–Ω –£—é—Ç",
      description: "–î–æ–º–∞—à–Ω—è—è –∫—É—Ö–Ω—è –∏ —É—é—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.",
      coordinates: [57.6235, 39.8877],
      type: "eat",
      age: "adult",
      image: "https://via.placeholder.com/400x200.png?text=–†–µ—Å—Ç–æ—Ä–∞–Ω+–£—é—Ç"
    },
    {
      name: "–ü–∞—Ä–∫ –Ω–∞ –î–∞–º–∞–Ω—Å–∫–æ–º –æ—Å—Ç—Ä–æ–≤–µ",
      description: "–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–µ—Ç–µ–π –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö.",
      coordinates: [57.6209, 39.8790],
      type: "walk",
      age: "child",
      image: "https://via.placeholder.com/400x200.png?text=–ü–∞—Ä–∫+–î–∞–º–∞–Ω—Å–∫–∏–π"
    },
    {
      name: "–ú—É–∑–µ–π –∏—Å—Ç–æ—Ä–∏–∏",
      description: "–ü–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤.",
      coordinates: [57.6217, 39.8892],
      type: "visit",
      age: "teen",
      image: "https://via.placeholder.com/400x200.png?text=–ú—É–∑–µ–π+–ò—Å—Ç–æ—Ä–∏–∏"
    },
    {
      name: "–ö–æ—Ñ–µ–π–Ω—è '–ß–µ—Ä–Ω—ã–π –∫–æ—Ç'",
      description: "–ú–æ–¥–Ω–∞—è –∫–æ—Ñ–µ–π–Ω—è —Å –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π –º–∏–Ω–∏–º–∞–ª–∏–∑–º–∞ –∏ specialty-–∫–æ—Ñ–µ.",
      coordinates: [57.6223, 39.8915],
      type: "eat",
      age: "teen",
      image: "https://via.placeholder.com/400x200.png?text=–ß–µ—Ä–Ω—ã–π+–∫–æ—Ç+–∫–æ—Ñ–µ–π–Ω—è"
    },
    {
      name: "–£–ª–∏—á–Ω—ã–π –∞—Ä—Ç –Ω–∞ —É–ª. –°–≤–æ–±–æ–¥—ã",
      description: "–ì—Ä–∞—Ñ—Ñ–∏—Ç–∏ –∏ –º—É—Ä–∞–ª—ã –Ω–∞ —Ñ–∞—Å–∞–¥–∞—Ö –¥–æ–º–æ–≤ ‚Äî –æ—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Ñ–æ—Ç–æ.",
      coordinates: [57.6211, 39.8932],
      type: "walk",
      age: "all",
      image: "https://via.placeholder.com/400x200.png?text=–°—Ç—Ä–∏—Ç-–ê—Ä—Ç+–°–≤–æ–±–æ–¥–∞"
    },
    {
      name: "–ë–∞—Ä '–ì–∞—Ä–∞–∂'",
      description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–∞—Ä —Å –∂–∏–≤–æ–π –º—É–∑—ã–∫–æ–π –ø–æ –≤—ã—Ö–æ–¥–Ω—ã–º. –¢–æ–ª—å–∫–æ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö.",
      coordinates: [57.6230, 39.8880],
      type: "eat",
      age: "adult",
      image: "https://via.placeholder.com/400x200.png?text=–ë–∞—Ä+–ì–∞—Ä–∞–∂"
    },
    {
      name: "–°–º–æ—Ç—Ä–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –Ω–∞ –°—Ç—Ä–µ–ª–∫–µ",
      description: "–ü–∞–Ω–æ—Ä–∞–º–Ω—ã–π –≤–∏–¥ –Ω–∞ —Å–ª–∏—è–Ω–∏–µ –í–æ–ª–≥–∏ –∏ –ö–æ—Ç–æ—Ä–æ—Å–ª–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –∫—Ä–∞—Å–∏–≤–æ –Ω–∞ –∑–∞–∫–∞—Ç–µ.",
      coordinates: [57.6264, 39.8848],
      type: "walk",
      age: "all",
      image: "https://upload.wikimedia.org/wikipedia/commons/3/3c/Yaroslavl_strelka.jpg"
    },
    {
      name: "–ú—É–∑–µ–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞",
      description: "–í—ã—Å—Ç–∞–≤–∫–∏ –º–µ—Å—Ç–Ω—ã—Ö –∏ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤, –∏–Ω—Å—Ç–∞–ª–ª—è—Ü–∏–∏ –∏ –ø–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å—ã.",
      coordinates: [57.6199, 39.8910],
      type: "visit",
      age: "teen",
      image: "https://via.placeholder.com/400x200.png?text=–ú—É–∑–µ–π+–°–æ–≤—Ä+–ò—Å–∫—É—Å—Å—Ç–≤–∞"
    },
    {
      name: "–õ–æ—Ñ—Ç-–ø–ª–æ—â–∞–¥–∫–∞ '–§–∞–±—Ä–∏–∫–∞'",
      description: "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Å –º–∞—Ä–∫–µ—Ç–∞–º–∏, –ª–µ–∫—Ü–∏—è–º–∏ –∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞–º–∏.",
      coordinates: [57.6248, 39.8861],
      type: "visit",
      age: "teen",
      image: "https://via.placeholder.com/400x200.png?text=–§–∞–±—Ä–∏–∫–∞+–õ–æ—Ñ—Ç"
    },
    {
      name: "–ü–∞—Ä–∫ 1000-–ª–µ—Ç–∏—è",
      description: "–ë–æ–ª—å—à–æ–π –≥–æ—Ä–æ–¥—Å–∫–æ–π –ø–∞—Ä–∫ —Å –¥–æ—Ä–æ–∂–∫–∞–º–∏, –∫–∞—á–µ–ª—è–º–∏ –∏ —Ñ—É–¥–∫–æ—Ä—Ç–∞–º–∏.",
      coordinates: [57.6273, 39.8857],
      type: "walk",
      age: "child",
      image: "https://via.placeholder.com/400x200.png?text=–ü–∞—Ä–∫+1000-–ª–µ—Ç–∏—è"
    },
    {
      name: "–ë—É—Ä–≥–µ—Ä–Ω–∞—è '–ú—è—Å–æ–µ–¥–æ–≤'",
      description: "–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –±—É—Ä–≥–µ—Ä—ã, –º—è—Å–æ –Ω–∞ –≥—Ä–∏–ª–µ, craft-–Ω–∞–ø–∏—Ç–∫–∏.",
      coordinates: [57.6227, 39.8822],
      type: "eat",
      age: "all",
      image: "https://via.placeholder.com/400x200.png?text=–ú—è—Å–æ–µ–¥–æ–≤"
    },
    {
      name: "VR-–∫–ª—É–± '–ê–ª—å—Ñ–∞'",
      description: "–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å ‚Äî –∏–≥—Ä—ã –∏ –∫–≤–µ—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤.",
      coordinates: [57.6255, 39.8888],
      type: "visit",
      age: "teen",
      image: "https://via.placeholder.com/400x200.png?text=VR+–ö–ª—É–±+–ê–ª—å—Ñ–∞"
    },
    {
      name: "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π –ê—Ä–±–∞—Ç (—É–ª. –ö–∏—Ä–æ–≤–∞)",
      description: "–ü–µ—à–µ—Ö–æ–¥–Ω–∞—è —É–ª–∏—Ü–∞ —Å –∫–∞—Ñ–µ, —Å—É–≤–µ–Ω–∏—Ä–Ω—ã–º–∏ –ª–∞–≤–∫–∞–º–∏ –∏ —É–ª–∏—á–Ω—ã–º–∏ –º—É–∑—ã–∫–∞–Ω—Ç–∞–º–∏.",
      coordinates: [57.6218, 39.8869],
      type: "walk",
      age: "all",
      image: "https://via.placeholder.com/400x200.png?text=–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π+–ê—Ä–±–∞—Ç"
    }    
  ];

  document.getElementById('show-route').addEventListener('click', () => {
    const ageFilter = document.getElementById('age').value;
    const duration = parseInt(document.getElementById('duration').value);
    const maxPlaces = duration * 2;

    let startPoint = document.getElementById('startInput').value.trim();
    if (!startPoint) startPoint = "–°–æ–≤–µ—Ç—Å–∫–∞—è –ø–ª–æ—â–∞–¥—å";

    const filtered = places.filter(p =>
      (selectedActivities.has(p.type)) &&
      (ageFilter === "all" || p.age === ageFilter || p.age === "all")
    ).slice(0, maxPlaces);

    if (filtered.length === 0) {
      alert("–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –º–µ—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã.");
      return;
    }

    document.getElementById('main-section').style.display = 'none';
    document.getElementById('route-display').style.display = 'block';
    navButtons.route.classList.add('active');
    navButtons.promos.classList.remove('active');
    navButtons.tinder.classList.remove('active');

    const info = document.getElementById('route-info');
    info.innerHTML = "";

    filtered.forEach((place, idx) => {
      const div = document.createElement('div');
      div.className = 'route-step';
      div.innerHTML = `
        <strong>${idx + 1}. ${place.name}</strong>
        <div class="description" style="display:none;">${place.description}</div>
        <button onclick="this.previousElementSibling.style.display='block'; this.remove()">–Ø —Ç—É—Ç</button>
      `;
      info.appendChild(div);
    });

    renderMapFromInput(startPoint, filtered.map(p => p.coordinates));
  });

  // Tinder –ª–æ–≥–∏–∫–∞
  let tinderIndex = 0;
  function renderTinderCard() {
    const ageFilter = document.getElementById('age').value;
    const available = places.filter(p =>
      ageFilter === "all" || p.age === ageFilter || p.age === "all"
    );

    if (tinderIndex >= available.length) {
      document.getElementById('tinder-card').innerHTML = "<p>–ú–µ—Å—Ç–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.</p>";
      document.querySelector('.tinder-buttons').style.display = 'none';
      return;
    }

    const place = available[tinderIndex];
    document.getElementById('tinder-card').innerHTML = `
      <img src="${place.image}" style="width:100%; border-radius: 0.5rem; margin-bottom:1rem" />
      <h3>${place.name}</h3>
      <p>${place.description}</p>
    `;
    document.querySelector('.tinder-buttons').style.display = 'flex';

    document.getElementById('skip').onclick = () => {
      tinderIndex++;
      renderTinderCard();
    };

    document.getElementById('go').onclick = () => {
      sections.tinder.style.display = 'none';
      sections.route.style.display = 'block';
      renderMapFromInput(document.getElementById('startInput').value || "–°–æ–≤–µ—Ç—Å–∫–∞—è –ø–ª–æ—â–∞–¥—å", [place.coordinates]);
      document.getElementById('route-info').innerHTML = `
        <div class="route-step">
          <strong>${place.name}</strong>
          <div class="description" style="display:none;">${place.description}</div>
          <button onclick="this.previousElementSibling.style.display='block'; this.remove()">–Ø —Ç—É—Ç</button>
        </div>
      `;
    };
  }

  navButtons.tinder.addEventListener('click', () => {
    sections.main.style.display = 'none';
    sections.route.style.display = 'none';
    sections.promos.style.display = 'none';
    sections.placeInfo.style.display = 'none';
    sections.tinder.style.display = 'block';
    tinderIndex = 0;
    renderTinderCard();
  });

  // –ê—É–¥–∏–æ–≥–∏–¥ –∏ –Ω–∞–∑–∞–¥
  document.getElementById('audio-btn')?.addEventListener('click', () => {
    alert("üîä –ê—É–¥–∏–æ–≥–∏–¥ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.");
  });

  document.getElementById('back-to-tinder')?.addEventListener('click', () => {
    sections.placeInfo.style.display = 'none';
    sections.tinder.style.display = 'block';
  });

  function renderMapFromInput(inputText, coordsArray) {
    fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(inputText)}&format=json`)
      .then(res => res.json())
      .then(data => {
        const point = data[0];
        if (!point) throw new Error("–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");

        const startCoords = [parseFloat(point.lat), parseFloat(point.lon)];
        renderMap(startCoords, coordsArray);
      })
      .catch(() => {
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—É—é —Ç–æ—á–∫—É. –ò—Å–ø–æ–ª—å–∑—É–µ–º –°–æ–≤–µ—Ç—Å–∫—É—é –ø–ª–æ—â–∞–¥—å.");
        renderMap([57.6261, 39.8845], coordsArray);
      });
  }

  // ‚úÖ –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–û–°–¢–†–û–ï–ù–ò–Ø –ú–ê–†–®–†–£–¢–ê –° –†–ê–°–°–¢–û–Ø–ù–ò–ï–ú –ò –í–†–ï–ú–ï–ù–ï–ú
  function renderMap(startCoords, targets) {
    const map = L.map('map').setView(startCoords, 14);
    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    L.marker(startCoords).addTo(map).bindPopup("–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞").openPopup();

    if (targets.length === 0) return;

    const end = targets[0];

    const url = `https://router.project-osrm.org/route/v1/foot/${startCoords[1]},${startCoords[0]};${end[1]},${end[0]}?overview=full&geometries=geojson`;

    fetch(url)
      .then(res => res.json())
      .then(data => {
        const route = data.routes[0];
        if (!route) throw new Error("–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");

        const distanceKm = (route.distance / 1000).toFixed(2);
        const durationMin = Math.round(route.duration / 60);

        L.geoJSON(route.geometry, {
          style: {
            color: 'deepskyblue',
            weight: 5
          }
        }).addTo(map);

        L.marker(end).addTo(map).bindPopup("–ü—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è");

        const info = document.getElementById('route-info');
        const summary = document.createElement('div');
        summary.style.marginTop = '1rem';
        summary.innerHTML = `<p><strong>–î–∏—Å—Ç–∞–Ω—Ü–∏—è:</strong> ${distanceKm} –∫–º<br><strong>–í—Ä–µ–º—è –≤ –ø—É—Ç–∏:</strong> ~${durationMin} –º–∏–Ω</p>`;
        info.prepend(summary);
      })
      .catch(() => {
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.");
      });
  }
});
